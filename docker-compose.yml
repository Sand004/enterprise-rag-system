version: '3.8'

services:
  # Core Application
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ENVIRONMENT=development
    env_file:
      - .env
    volumes:
      - ./src:/app/src
      - ./config:/app/config
      - ./data:/app/data
    depends_on:
      - redis
      - postgres
      - qdrant
      - minio
    networks:
      - rag-network

  # Vector Database - Qdrant
  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
    volumes:
      - qdrant_storage:/qdrant/storage
    environment:
      - QDRANT__SERVICE__API_KEY=${QDRANT_API_KEY}
    networks:
      - rag-network

  # PostgreSQL (for pgvector alternative)
  postgres:
    image: pgvector/pgvector:pg16
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - rag-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - rag-network

  # MinIO (S3-compatible storage)
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${S3_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${S3_SECRET_KEY}
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - rag-network

  # vLLM Server (GPU required)
  vllm:
    image: vllm/vllm-openai:latest
    ports:
      - "8000:8000"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    volumes:
      - ./models:/models
    environment:
      - MODEL_NAME=${VLLM_MODEL}
      - QUANTIZATION=${VLLM_QUANTIZATION}
      - TENSOR_PARALLEL_SIZE=4
      - MAX_MODEL_LEN=32768
      - GPU_MEMORY_UTILIZATION=0.9
    command: [
      "--model", "${VLLM_MODEL}",
      "--tensor-parallel-size", "4",
      "--max-model-len", "32768",
      "--gpu-memory-utilization", "0.9",
      "--quantization", "${VLLM_QUANTIZATION}"
    ]
    networks:
      - rag-network

volumes:
  qdrant_storage:
  postgres_data:
  redis_data:
  minio_data:

networks:
  rag-network:
    driver: bridge